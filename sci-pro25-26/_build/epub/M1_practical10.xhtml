<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Module 1, Practical 10</title>
    <link rel="stylesheet" type="text/css" href="_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="_static/epub.css" />
    <link rel="stylesheet" type="text/css" href="_static/nbsphinx-code-cells.css" />
    <link rel="stylesheet" type="text/css" href="_static/css/jupman.css" />
    <link rel="stylesheet" type="text/css" href="_static/css/jupman-web.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="Module-1,-Practical-10">
<h1>Module 1, Practical 10</h1>
<section id="Part-1">
<h2>Part 1</h2>
<p>Several years ago, researchers compiled a dataset known as the <a class="reference external" href="https://figshare.com/articles/dataset/The_Copenhagen_Networks_Study_interaction_data/7267433">“Copenhagen Network study”</a><span class="link-target"> [https://figshare.com/articles/dataset/The_Copenhagen_Networks_Study_interaction_data/7267433]</span>. This dataset includes a range of information collected from 700 university students. In this exam, we will focus on the following files:</p>
<ol class="arabic simple">
<li><p>A list of phone calls: <a class="reference external" href="DTU/calls.csv">calls.csv</a></p></li>
<li><p>Information about Facebook friendships: <a class="reference external" href="DTU/fb_friends.csv">fb_friends.csv</a></p></li>
<li><p>Student gender data: <a class="reference internal" href="DTU/genders.xhtml"><span class="doc">genders.txt</span></a></p></li>
</ol>
<p>The data in these files are structured as follows:</p>
<p><strong>calls.csv</strong></p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>timestamp,caller,callee,duration
184,300,301,121
3920,512,299,670
</pre></div>
</div>
<p><strong>fb_friends.csv</strong></p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span># user_a,user_b
0,512
0,263
0,525
</pre></div>
</div>
<p><strong>gender.txt</strong></p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>0_M 2_M 3_M 4_M 5_M ...
</pre></div>
</div>
<p>Write a program that performs the following tasks:</p>
<ol class="arabic simple">
<li><p><strong>Find the Longest Call:</strong> Identify the call with the longest duration from the dataset.</p></li>
<li><p><strong>Check Facebook Friendship:</strong> Determine if the caller and receiver in the longest call are friends on Facebook.</p></li>
<li><p><strong>Display Genders:</strong> Print the gender of both students involved in the longest call.</p></li>
<li><p><strong>Discretize Interaction Durations:</strong> Convert the duration of each interaction from seconds into hourly units. Any interaction that occurs within one hour should be rounded up to 1 (for example, 45 minutes or 3600 seconds both discretize to 1 hour).</p></li>
</ol>
<p><strong>Input:</strong> The program should take in the file CALLS.</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>    time  id_a id_b duration
[
    [  184,   300,   301,   121],
    [ 3920,   512,   299,   670],
    [ 5623,   301,   300,   504],
    [ 9252,   401,   457,    -1],
    [15466,   512,     0,     5],
    [15497,   512,     0,    28],
    [26400,    19,    47,   619],
    [31312,   687,   310,    11],
    [36265,   300,   301,    74],
    [37049,   634,   681,    20],
   ...,
]
</pre></div>
</div>
<p>output CALLS</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>    time  id_a id_b duration
[
    [  0,   300,   301,   121],
    [  1,   512,   299,   670],
    [  1,   301,   300,   504],
    [  2,   401,   457,    -1],
    [  4,   512,     0,     5],
    [  4,   512,     0,    28],
    [  7,    19,    47,   619],
    [  8,   687,   310,    11],
    [ 10,   300,   301,    74],
    [ 10,   634,   681,    20],
   ...,
]
</pre></div>
</div>
<ol class="arabic simple" start="5">
<li><p>then plot those interactions, you should obtain a plot like the one bellow! pay attention to x and y labels</p></li>
</ol>
<img alt="nb_interactions" src="_images/nb_interactions.png" />
<p><strong>NOTE</strong> you should define a function for each point.</p>
<div class="tggle" onclick="toggleVisibility(&#39;ex1&#39;);"><p>Show/Hide Solution</p>
</div><div id="ex1" style="display:none;"><div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[ ]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="k">def</span> <span class="nf">get_longest_call</span><span class="p">(</span><span class="n">calls</span><span class="p">):</span>
    <span class="n">longest_call</span> <span class="o">=</span> <span class="n">calls</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">calls</span><span class="p">[</span><span class="s1">&#39;duration&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">idxmax</span><span class="p">()]</span>
    <span class="n">id_caller</span><span class="p">,</span> <span class="n">id_callee</span> <span class="o">=</span> <span class="n">longest_call</span><span class="o">.</span><span class="n">caller</span><span class="p">,</span><span class="n">longest_call</span><span class="o">.</span><span class="n">callee</span>
    <span class="k">return</span> <span class="n">id_caller</span><span class="p">,</span><span class="n">id_callee</span>


<span class="k">def</span> <span class="nf">get_friends_fb</span><span class="p">(</span><span class="n">fb</span><span class="p">):</span>
    <span class="n">fb_friends</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">_</span><span class="p">,</span><span class="n">i</span> <span class="ow">in</span> <span class="n">fb</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
        <span class="n">user_a</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">user_b</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">fb_friends</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">user_a</span><span class="p">,</span><span class="n">user_b</span><span class="p">))</span>

    <span class="k">return</span> <span class="n">fb_friends</span>

<span class="k">def</span> <span class="nf">get_gender</span><span class="p">(</span><span class="n">gender</span><span class="p">,</span><span class="n">id_caller</span><span class="p">,</span><span class="n">id_callee</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;gender of &quot;</span><span class="p">,</span><span class="n">id_callee</span><span class="p">,</span><span class="s2">&quot; = &quot;</span><span class="p">,</span><span class="n">gender</span><span class="p">[</span><span class="n">id_callee</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;gender of &quot;</span><span class="p">,</span><span class="n">id_caller</span><span class="p">,</span><span class="s2">&quot; = &quot;</span><span class="p">,</span><span class="n">gender</span><span class="p">[</span><span class="n">id_caller</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">get_sms_count_dict</span><span class="p">(</span><span class="n">sms</span><span class="p">):</span>
    <span class="n">sms_count</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">_</span><span class="p">,</span><span class="n">i</span> <span class="ow">in</span> <span class="n">sms</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
        <span class="n">_</span><span class="p">,</span><span class="n">sender</span><span class="p">,</span><span class="n">reciver</span> <span class="o">=</span> <span class="n">i</span>

        <span class="k">if</span> <span class="n">sender</span> <span class="o">&gt;</span> <span class="n">reciver</span><span class="p">:</span>
            <span class="n">tmp</span> <span class="o">=</span> <span class="n">sender</span>
            <span class="n">sender</span> <span class="o">=</span> <span class="n">reciver</span>
            <span class="n">reciver</span> <span class="o">=</span> <span class="n">tmp</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">sender</span><span class="p">,</span><span class="n">reciver</span><span class="p">)</span> <span class="ow">in</span> <span class="n">sms_count</span><span class="p">:</span>
            <span class="n">sms_count</span><span class="p">[(</span><span class="n">sender</span><span class="p">,</span><span class="n">reciver</span><span class="p">)]</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">sms_count</span><span class="p">[(</span><span class="n">sender</span><span class="p">,</span><span class="n">reciver</span><span class="p">)]</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="k">return</span> <span class="n">sms_count</span>


<span class="k">def</span> <span class="nf">get_tot_messages</span><span class="p">(</span><span class="n">sms_count</span><span class="p">,</span><span class="n">fb_friends</span><span class="p">):</span>
    <span class="n">tot_messages</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">sms_count</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
        <span class="n">id_a</span><span class="p">,</span> <span class="n">id_b</span> <span class="o">=</span> <span class="n">k</span>

        <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">id_a</span><span class="p">,</span><span class="n">id_b</span><span class="p">)</span> <span class="ow">in</span> <span class="n">fb_friends</span><span class="p">:</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">id_b</span><span class="p">,</span><span class="n">id_a</span><span class="p">)</span> <span class="ow">in</span> <span class="n">fb_friends</span><span class="p">:</span>
                <span class="n">tot_messages</span> <span class="o">+=</span> <span class="n">v</span>
    <span class="k">return</span> <span class="n">tot_messages</span>

<span class="k">def</span> <span class="nf">load_gender</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">res</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">el</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">):</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="n">el</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">)</span>
        <span class="n">idx</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">gender</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">res</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">idx</span><span class="p">)]</span> <span class="o">=</span> <span class="n">gender</span>
    <span class="k">return</span> <span class="n">res</span>

<span class="k">def</span> <span class="nf">get_discretized_times</span><span class="p">(</span><span class="n">calls_small</span><span class="p">):</span>
    <span class="n">times_call</span> <span class="o">=</span> <span class="p">[]</span>


    <span class="k">for</span> <span class="n">t</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">d</span> <span class="ow">in</span> <span class="n">calls_small</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">():</span>
        <span class="n">times_call</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">t</span><span class="o">/</span><span class="p">(</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="p">)))</span>

    <span class="k">return</span> <span class="n">times_call</span>

<span class="k">def</span> <span class="nf">my_plot</span><span class="p">(</span><span class="n">times_call</span><span class="p">):</span>

    <span class="n">t_c</span><span class="p">,</span><span class="n">count_c</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">unique</span><span class="p">(</span><span class="n">times_call</span><span class="p">,</span><span class="n">return_counts</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

    <span class="n">x_ticks</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">x_labels</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">int</span><span class="p">((</span><span class="nb">max</span><span class="p">(</span><span class="n">t_c</span><span class="p">)</span><span class="o">/</span><span class="mi">24</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)):</span>
        <span class="n">x_ticks</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="o">*</span><span class="mi">24</span><span class="p">)</span>
        <span class="n">x_labels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&quot;Day &quot;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>

    <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">t_c</span><span class="p">,</span><span class="n">count_c</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="s2">&quot;calls&quot;</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s2">&quot;blue&quot;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s2">&quot;Number of interactions&quot;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">x_ticks</span><span class="p">,</span> <span class="n">x_labels</span><span class="p">,</span><span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&quot;Calls&quot;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s2">&quot;nb_interactions.png&quot;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>



<span class="c1"># load data</span>
<span class="n">fb</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&quot;DTU/fb_friends.csv&quot;</span><span class="p">)</span>
<span class="n">calls</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&quot;DTU/calls.csv&quot;</span><span class="p">)</span>


<span class="c1"># 1)</span>
<span class="n">id_caller</span><span class="p">,</span> <span class="n">id_callee</span> <span class="o">=</span> <span class="n">get_longest_call</span><span class="p">(</span><span class="n">calls</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;1)&quot;</span><span class="p">,</span><span class="s2">&quot;the longest call is:&quot;</span><span class="p">,</span><span class="n">id_caller</span><span class="p">,</span> <span class="s2">&quot;and&quot;</span><span class="p">,</span> <span class="n">id_callee</span><span class="p">)</span>

<span class="c1"># 2)</span>
<span class="n">fb_friends</span> <span class="o">=</span> <span class="n">get_friends_fb</span><span class="p">(</span><span class="n">fb</span><span class="p">)</span>
<span class="k">if</span> <span class="p">(</span><span class="n">id_callee</span><span class="p">,</span><span class="n">id_caller</span><span class="p">)</span> <span class="ow">in</span> <span class="n">fb_friends</span> <span class="ow">or</span> <span class="p">(</span><span class="n">id_caller</span><span class="p">,</span><span class="n">id_callee</span><span class="p">)</span> <span class="ow">in</span> <span class="n">fb_friends</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;2)&quot;</span><span class="p">,</span><span class="n">id_callee</span><span class="p">,</span><span class="s2">&quot; and &quot;</span><span class="p">,</span><span class="n">id_caller</span><span class="p">,</span><span class="s2">&quot; are friend of FB&quot;</span><span class="p">)</span>

<span class="c1"># 3)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;3)&quot;</span><span class="p">)</span>
<span class="n">gender</span> <span class="o">=</span> <span class="n">load_gender</span><span class="p">(</span><span class="s2">&quot;DTU/gender.txt&quot;</span><span class="p">)</span>
<span class="n">get_gender</span><span class="p">(</span><span class="n">gender</span><span class="p">,</span><span class="n">id_caller</span><span class="p">,</span><span class="n">id_callee</span><span class="p">)</span>

<span class="c1"># 4)</span>
<span class="n">times_call</span> <span class="o">=</span> <span class="n">get_discretized_times</span><span class="p">(</span><span class="n">calls</span><span class="p">)</span>
<span class="n">my_plot</span><span class="p">(</span><span class="n">times_call</span><span class="p">)</span>
</pre></div>
</div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
<span class="ansi-red-intense-fg ansi-bold">Running cells with &#39;Python 3.10.6&#39; requires the ipykernel package.

</span><span class="ansi-red-intense-fg ansi-bold">Run the following command to install &#39;ipykernel&#39; into the Python environment.

</span><span class="ansi-red-intense-fg ansi-bold">Command: &#39;/usr/bin/python3 -m pip install ipykernel -U --user --force-reinstall&#39;</span>
</pre></div></div>
</div>
<div class="nbinput docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[5]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>




<span class="k">def</span> <span class="nf">max_call</span><span class="p">(</span><span class="n">call</span><span class="p">):</span>
    <span class="n">m</span> <span class="o">=</span> <span class="n">call</span><span class="o">.</span><span class="n">duration</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>
    <span class="n">cd</span> <span class="o">=</span> <span class="n">call</span><span class="p">[</span><span class="n">call</span><span class="o">.</span><span class="n">duration</span> <span class="o">==</span> <span class="n">m</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">cd</span><span class="o">.</span><span class="n">caller</span><span class="o">.</span><span class="n">item</span><span class="p">(),</span> <span class="n">cd</span><span class="o">.</span><span class="n">callee</span><span class="o">.</span><span class="n">item</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">fun2</span><span class="p">(</span><span class="n">fb</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>

    <span class="k">for</span> <span class="n">idx</span><span class="p">,</span><span class="n">row</span> <span class="ow">in</span> <span class="n">fb</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>
        <span class="n">ca</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s2">&quot;# user_a&quot;</span><span class="p">]</span>
        <span class="n">cb</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s2">&quot;user_b&quot;</span><span class="p">]</span>

        <span class="k">if</span> <span class="n">a</span> <span class="o">==</span> <span class="n">ca</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">==</span> <span class="n">cb</span><span class="p">:</span>
            <span class="k">return</span> <span class="kc">True</span>
        <span class="k">elif</span> <span class="n">a</span> <span class="o">==</span> <span class="n">cb</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">==</span> <span class="n">ca</span><span class="p">:</span>
            <span class="k">return</span> <span class="kc">True</span>

    <span class="k">return</span> <span class="kc">False</span>

<span class="k">def</span> <span class="nf">fun2_1</span><span class="p">(</span><span class="n">fb</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="n">d</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>

    <span class="k">for</span> <span class="n">idx</span><span class="p">,</span><span class="n">row</span> <span class="ow">in</span> <span class="n">fb</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
        <span class="n">ca</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s2">&quot;# user_a&quot;</span><span class="p">]</span>
        <span class="n">cb</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s2">&quot;user_b&quot;</span><span class="p">]</span>

        <span class="n">d</span><span class="p">[(</span><span class="n">ca</span><span class="p">,</span><span class="n">cb</span><span class="p">)]</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
        <span class="k">return</span> <span class="kc">True</span>
    <span class="k">elif</span> <span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="p">)</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
        <span class="k">return</span> <span class="kc">True</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="kc">False</span>

<span class="k">def</span> <span class="nf">fun3</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>

    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;DTU/gender.txt&quot;</span><span class="p">,</span><span class="s2">&quot;r&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">gender_in</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readlines</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>

    <span class="n">gender</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">gender_in</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">):</span>
        <span class="n">idx</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">gen</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span>


        <span class="n">gender</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">idx</span><span class="p">)]</span> <span class="o">=</span> <span class="n">gen</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">gender</span><span class="p">[</span><span class="n">a</span><span class="p">],</span><span class="n">gender</span><span class="p">[</span><span class="n">b</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">fun4</span><span class="p">(</span><span class="n">call</span><span class="p">):</span>
    <span class="n">new</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span> <span class="ow">in</span> <span class="n">call</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">():</span>
        <span class="n">new_a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="mi">3600</span><span class="p">)</span>
        <span class="n">new</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">new_a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">])</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">new</span><span class="p">,</span><span class="n">columns</span><span class="o">=</span><span class="n">call</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">res</span>

<span class="k">def</span> <span class="nf">fun4</span><span class="p">(</span><span class="n">call</span><span class="p">):</span>
    <span class="n">call</span><span class="o">.</span><span class="n">timestamp</span> <span class="o">=</span> <span class="n">call</span><span class="o">.</span><span class="n">timestamp</span><span class="o">//</span><span class="mi">3600</span>
    <span class="k">return</span> <span class="n">call</span>



<span class="n">call</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&quot;DTU/calls.csv&quot;</span><span class="p">)</span>
<span class="n">fb</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&quot;DTU/fb_friends.csv&quot;</span><span class="p">)</span>


<span class="n">a</span><span class="p">,</span><span class="n">b</span> <span class="o">=</span> <span class="n">max_call</span><span class="p">(</span><span class="n">call</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">fun2_1</span><span class="p">(</span><span class="n">fb</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
<span class="n">fun3</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
<span class="n">call2</span> <span class="o">=</span> <span class="n">fun4</span><span class="p">(</span><span class="n">call</span><span class="p">)</span>


<span class="n">v</span><span class="p">,</span><span class="n">h</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">unique</span><span class="p">(</span><span class="n">call2</span><span class="o">.</span><span class="n">timestamp</span><span class="p">,</span><span class="n">return_counts</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="n">h</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="s2">&quot;calls&quot;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s2">&quot;nb of interactions&quot;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&quot;calls&quot;</span><span class="p">)</span>

<span class="n">x_ticks</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">x_labels</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">int</span><span class="p">((</span><span class="nb">max</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">/</span><span class="mi">24</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)):</span>
    <span class="n">x_ticks</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="o">*</span><span class="mi">24</span><span class="p">)</span>
    <span class="n">x_labels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&quot;Day &quot;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">x_ticks</span><span class="p">,</span> <span class="n">x_labels</span><span class="p">,</span><span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
<br/></pre></div>
</div>
</div>
<div class="nboutput docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<div class="highlight"><pre>
True
136 137
M F
</pre></div></div>
</div>
<div class="nboutput nblast docutils container">
<div class="prompt empty docutils container">
</div>
<div class="output_area docutils container">
<img alt="_images/M1_practical10_2_1.png" src="_images/M1_practical10_2_1.png" />
</div>
</div>
</div><div class="nbinput nblast docutils container">
<div class="prompt highlight-none notranslate"><div class="highlight"><pre><span></span>[ ]:
</pre></div>
</div>
<div class="input_area highlight-ipython3 notranslate"><div class="highlight"><pre><span></span>
</pre></div>
</div>
</div>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>